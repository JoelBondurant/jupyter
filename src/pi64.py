In [1]: import ctypes

In [2]: # The smallest deviations from 64 bit pi:

In [3]: ['{0:.60f}'.format((ctypes.c_double.from_buffer(ctypes.c_long(ctypes.c_long.from_buffer(ctypes.c_double(math.pi)).value + x)).value)) for x in [1,0,-1]]
Out[3]: 
['3.141592653589793560087173318606801331043243408203125000000000',
 '3.141592653589793115997963468544185161590576171875000000000000',
 '3.141592653589792671908753618481568992137908935546875000000000']
 
In [4]: # And in binary:

In [5]: [bin(ctypes.c_int.from_buffer(ctypes.c_float(math.pi)).value + x) for x in [1,0,-1]]
Out[5]: 
['0b1000000010010010000111111011100',
 '0b1000000010010010000111111011011',
 '0b1000000010010010000111111011010']
 
In [6]: # Closer numbers to pi don't exist in 64 bits:
 
In [7]: 3.1415926535897934
Out[7]: 3.1415926535897936

In [8]: ['{0:.60f}'.format(x) for x in [3.1415926535897927, 3.1415926535897932]]
Out[8]: 
['3.141592653589792671908753618481568992137908935546875000000000',
 '3.141592653589793115997963468544185161590576171875000000000000']

In [9]: # The circumfrenece of Earth's orbit around the Sun in inches with the various pi deviants:

In [10]: ['{0:.20f}'.format(d) for d in [2*mypi*93*10**6*5280*12 for mypi in [ctypes.c_double.from_buffer(ctypes.c_long(ctypes.c_long.from_buffer(ctypes.c_double(math.pi)).value + x)).value for x in [1,0,-1]]]]
Out[10]: 
['37023543758849.57031250000000000000',
 '37023543758849.56250000000000000000',
 '37023543758849.56250000000000000000']

In [11]: # A tiny fraction of an inch error on 584 million miles.

In [12]: ['{0:.60f}'.format(x) for x in [0.3, 0.2, 0.3 - 0.2]]+[0.3-0.2]
Out[12]: 
['0.299999999999999988897769753748434595763683319091796875000000',
 '0.200000000000000011102230246251565404236316680908203125000000',
 '0.099999999999999977795539507496869191527366638183593750000000',
 0.09999999999999998]